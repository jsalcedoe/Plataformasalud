package com.js.plataformasalud.modelos.entidades;

import java.io.Serializable;
import java.util.Date;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotEmpty;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@Entity
@Table(name = "sigvit")

public class SignosVitales implements Serializable {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long idsigvit;
	
	@Column(length = 3, nullable = false)
	@NotEmpty(message = "El campo frecuencia cardiaca no puede ser vacio")
	private String fchcpac;
	
	@Column(length = 3, nullable = false)
	@NotEmpty(message = "El campo frecuencia respiratoria no puede ser vacio")
	private String frhcpac;
	
	@Column(length = 3, nullable = false)
	@NotEmpty(message = "El campo temperatura no puede ser vacio")
	private String temphcpac;
	
	@Column(length = 7, nullable = false)
	@NotEmpty(message = "El campo tension arterial no puede ser vacio")
	private String tahcpac;
	
	private Long pesohcpac;
	
	private Long estaturahcpac;
	
	private Long imchcpac;
	
	@Temporal(TemporalType.TIMESTAMP)
	private Date datecreatsigvit;
	
	private Date editsigvit;
	
	public void calculaIMC(Long pesohcpac, Long estaturahcpac) {
		this.pesohcpac = pesohcpac;
		this.estaturahcpac = estaturahcpac;
		
		if (pesohcpac > 0 && estaturahcpac > 0) {
			Long imc = pesohcpac /(estaturahcpac * estaturahcpac);
			this.imchcpac = imc;
		}
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnoreProperties({"hibernateLazyInitializer","handler"})
	private Estado estsigvit_fk;
	
	private static final long serialVersionUID = 1L;

}
